user@gccec-user:~$ cd /media/PENDRIVE/Projects/kgmEngine/kgmMain/
user@gccec-user:/media/PENDRIVE/Projects/kgmEngine/kgmMain$ make
g++ -g -c *.cpp -DLINUX -I./ -I./inc -I../kgmMath
In file included from kgmApp.cpp:2:
kgmWindow.h:26: fatal error: X11/extensions/xf86vmode.h: No such file or directory
compilation terminated.
In file included from kgmGC.h:2,
                 from kgmGC.cpp:1:
kgmWindow.h:26: fatal error: X11/extensions/xf86vmode.h: No such file or directory
compilation terminated.
In file included from kgmOGL.h:7,
                 from kgmOGL.cpp:5:
kgmWindow.h:26: fatal error: X11/extensions/xf86vmode.h: No such file or directory
compilation terminated.
In file included from kgmOGLExt.cpp:1:
kgmOGLExt.h:7: fatal error: X11/extensions/xf86vmode.h: No such file or directory
compilation terminated.
kgmSystem.cpp:13: fatal error: X11/extensions/xf86vmode.h: No such file or directory
compilation terminated.
In file included from kgmWindow.cpp:3:
kgmWindow.h:26: fatal error: X11/extensions/xf86vmode.h: No such file or directory
compilation terminated.
kgmXml.cpp: In member function ‘kgmXml::Node* kgmXml::parse(void*, int)’:
kgmXml.cpp:128: warning: deprecated conversion from string constant to ‘char*’
kgmXml.cpp:134: warning: deprecated conversion from string constant to ‘char*’
kgmXml.cpp:136: warning: deprecated conversion from string constant to ‘char*’
kgmXml.cpp:150: warning: deprecated conversion from string constant to ‘char*’
kgmXml.cpp:152: warning: deprecated conversion from string constant to ‘char*’
kgmXml.cpp:158: warning: deprecated conversion from string constant to ‘char*’
kgmXml.cpp:167: warning: deprecated conversion from string constant to ‘char*’
kgmXml.cpp:172: warning: deprecated conversion from string constant to ‘char*’
kgmXml.cpp:174: warning: deprecated conversion from string constant to ‘char*’
kgmXml.cpp:175: warning: deprecated conversion from string constant to ‘char*’
make: *** [all] Error 1
user@gccec-user:/media/PENDRIVE/Projects/kgmEngine/kgmMain$ make
g++ -g -c *.cpp -DLINUX -I./ -I./inc -I../kgmMath
kgmXml.cpp: In member function ‘kgmXml::Node* kgmXml::parse(void*, int)’:
kgmXml.cpp:128: warning: deprecated conversion from string constant to ‘char*’
kgmXml.cpp:134: warning: deprecated conversion from string constant to ‘char*’
kgmXml.cpp:136: warning: deprecated conversion from string constant to ‘char*’
kgmXml.cpp:150: warning: deprecated conversion from string constant to ‘char*’
kgmXml.cpp:152: warning: deprecated conversion from string constant to ‘char*’
kgmXml.cpp:158: warning: deprecated conversion from string constant to ‘char*’
kgmXml.cpp:167: warning: deprecated conversion from string constant to ‘char*’
kgmXml.cpp:172: warning: deprecated conversion from string constant to ‘char*’
kgmXml.cpp:174: warning: deprecated conversion from string constant to ‘char*’
kgmXml.cpp:175: warning: deprecated conversion from string constant to ‘char*’
ar crs ../libkgmEngine.a *.o
user@gccec-user:/media/PENDRIVE/Projects/kgmEngine/kgmMain$ make
g++ -g -c *.cpp -DLINUX -I./ -I./inc -I../kgmMath
kgmXml.cpp: In member function ‘kgmXml::Node* kgmXml::parse(void*, int)’:
kgmXml.cpp:128: warning: deprecated conversion from string constant to ‘char*’
kgmXml.cpp:134: warning: deprecated conversion from string constant to ‘char*’
kgmXml.cpp:136: warning: deprecated conversion from string constant to ‘char*’
kgmXml.cpp:150: warning: deprecated conversion from string constant to ‘char*’
kgmXml.cpp:152: warning: deprecated conversion from string constant to ‘char*’
kgmXml.cpp:158: warning: deprecated conversion from string constant to ‘char*’
kgmXml.cpp:167: warning: deprecated conversion from string constant to ‘char*’
kgmXml.cpp:172: warning: deprecated conversion from string constant to ‘char*’
kgmXml.cpp:174: warning: deprecated conversion from string constant to ‘char*’
kgmXml.cpp:175: warning: deprecated conversion from string constant to ‘char*’
ar crs ../libkgmEngine.a *.o
user@gccec-user:/media/PENDRIVE/Projects/kgmEngine/kgmMain$ make
g++ -g -c *.cpp -DLINUX -I./ -I./inc -I../kgmMath
In file included from kgmString.h:2,
                 from kgmApp.h:2,
                 from kgmApp.cpp:1:
kgmArray.h:6: error: expected class-name before ‘{’ token
kgmArray.h: In constructor ‘kgmArray<T>::kgmArray()’:
kgmArray.h:9: error: class ‘kgmArray<T>’ does not have any field named ‘kgmMemory’
kgmArray.h: In constructor ‘kgmArray<T>::kgmArray(uint)’:
kgmArray.h:13: error: class ‘kgmArray<T>’ does not have any field named ‘kgmMemory’
kgmArray.h: In member function ‘void kgmArray<T>::operator=(const kgmArray<T>&)’:
kgmArray.h:24: error: there are no arguments to ‘clear’ that depend on a template parameter, so a declaration of ‘clear’ mus
t be available                                                                                                             
kgmArray.h:24: note: (if you use ‘-fpermissive’, G++ will accept your code, but allowing the use of an undeclared name is de
precated)                                                                                                                  
kgmArray.h:25: error: ‘o’ was not declared in this scope
kgmArray.h: In member function ‘void kgmArray<T>::realloc(uint)’:
kgmArray.h:31: error: ‘m_data’ was not declared in this scope
kgmArray.h:32: error: ‘m_length’ was not declared in this scope
kgmArray.h:34: error: ‘new_Count’ was not declared in this scope
kgmArray.h: In member function ‘void kgmArray<T>::add(const T&)’:
kgmArray.h:43: error: ‘m_length’ was not declared in this scope
kgmArray.h:44: error: ‘m_data’ was not declared in this scope
In file included from kgmApp.h:2,
                 from kgmApp.cpp:1:
kgmString.h: At global scope:
kgmString.h:10: error: expected class-name before ‘{’ token
kgmString.h: In constructor ‘kgmTString<T>::kgmTString()’:
kgmString.h:13: error: class ‘kgmTString<T>’ does not have any field named ‘kgmArray’
kgmString.h: In destructor ‘virtual kgmTString<T>::~kgmTString()’:
kgmString.h:25: error: there are no arguments to ‘clear’ that depend on a template parameter, so a declaration of ‘clear’ mu
st be available                                                                                                            
kgmString.h: In member function ‘kgmTString<T>& kgmTString<T>::operator=(const T*)’:
kgmString.h:30: error: there are no arguments to ‘clear’ that depend on a template parameter, so a declaration of ‘clear’ mu
st be available                                                                                                            
kgmString.h: In member function ‘kgmTString<T>& kgmTString<T>::operator=(const kgmTString<T>&)’:
kgmString.h:40: error: there are no arguments to ‘clear’ that depend on a template parameter, so a declaration of ‘clear’ mu
st be available                                                                                                            
kgmString.h: In member function ‘kgmTString<T>& kgmTString<T>::operator+=(const kgmTString<T>&)’:
kgmString.h:48: error: ‘m_length’ was not declared in this scope
kgmString.h:52: error: ‘m_data’ was not declared in this scope
kgmString.h:54: error: there are no arguments to ‘clear’ that depend on a template parameter, so a declaration of ‘clear’ mu
st be available                                                                                                            
kgmString.h: In member function ‘T& kgmTString<T>::operator[](uint)’:
kgmString.h:68: error: ‘m_data’ was not declared in this scope
kgmString.h: In member function ‘bool kgmTString<T>::operator==(const kgmTString<T>&)’:
kgmString.h:72: error: ‘m_data’ was not declared in this scope
kgmString.h:72: error: ‘m_length’ was not declared in this scope
kgmString.h: In member function ‘bool kgmTString<T>::operator==(const T*)’:
kgmString.h:76: error: ‘m_data’ was not declared in this scope
kgmString.h:76: error: ‘m_length’ was not declared in this scope
kgmString.h: In member function ‘kgmTString<T>::operator T*() const’:
kgmString.h:81: error: ‘m_data’ was not declared in this scope
kgmString.h: In member function ‘kgmTString<T>::operator const T*() const’:
kgmString.h:85: error: ‘m_data’ was not declared in this scope
kgmString.h: In member function ‘void kgmTString<T>::alloc(uint)’:
kgmString.h:90: error: there are no arguments to ‘clear’ that depend on a template parameter, so a declaration of ‘clear’ mu
st be available                                                                                                            
kgmString.h:91: error: ‘m_length’ was not declared in this scope
kgmString.h:92: error: ‘m_data’ was not declared in this scope
kgmString.h: In member function ‘void kgmTString<T>::alloc(T*, uint)’:
kgmString.h:97: error: there are no arguments to ‘clear’ that depend on a template parameter, so a declaration of ‘clear’ mu
st be available                                                                                                            
kgmString.h:98: error: ‘m_length’ was not declared in this scope
kgmString.h:99: error: ‘m_data’ was not declared in this scope
kgmString.h: In member function ‘void kgmTString<T>::toUpper()’:
kgmString.h:105: error: ‘m_data’ was not declared in this scope
kgmString.h:110: error: ‘m_length’ was not declared in this scope
kgmString.h:111: error: ‘m_data’ was not declared in this scope
kgmString.h: In member function ‘void kgmTString<T>::toLower()’:
kgmString.h:116: error: ‘m_data’ was not declared in this scope
kgmString.h:121: error: ‘m_length’ was not declared in this scope
kgmString.h:122: error: ‘m_data’ was not declared in this scope
kgmString.h: In member function ‘int kgmTString<T>::exist(T&)’:
kgmString.h:127: error: ‘m_length’ was not declared in this scope
kgmString.h:128: error: ‘m_data’ was not declared in this scope
kgmString.h: In member function ‘T* kgmTString<T>::pointer(uint)’:
kgmString.h:134: error: ‘m_length’ was not declared in this scope
kgmString.h:136: error: ‘m_data’ was not declared in this scope
kgmString.h: In member function ‘kgmTString<T> kgmTString<T>::tokenize(kgmTString<T>&, unsigned int&)’:
kgmString.h:147: error: there are no arguments to ‘length’ that depend on a template parameter, so a declaration of ‘length’
 must be available                                                                                                         
kgmString.h:152: error: there are no arguments to ‘length’ that depend on a template parameter, so a declaration of ‘length’
 must be available                                                                                                         
kgmString.h:157: error: there are no arguments to ‘length’ that depend on a template parameter, so a declaration of ‘length’
 must be available                                                                                                         
kgmString.h:161: error: there are no arguments to ‘length’ that depend on a template parameter, so a declaration of ‘length’
 must be available                                                                                                         
kgmString.h:167: error: ‘m_str’ was not declared in this scope
kgmString.h: In member function ‘bool kgmTString<T>::string(T, T, kgmTString<T>&)’:
kgmString.h:190: error: ‘m_str’ was not declared in this scope
kgmString.h: In member function ‘void kgmTString<T>::string(T*)’:
kgmString.h:197: error: ‘m_str’ was not declared in this scope
kgmString.h:197: error: ‘m_size’ was not declared in this scope
kgmString.h: In member function ‘int kgmTString<T>::find(T, int)’:
kgmString.h:203: error: ‘m_length’ was not declared in this scope
kgmString.h:205: error: ‘m_length’ was not declared in this scope
kgmString.h:206: error: ‘m_data’ was not declared in this scope
In file included from kgmString.h:2,
                 from kgmFile.h:3,
                 from kgmArchive.h:9,
                 from kgmArchive.cpp:5:
kgmArray.h:6: error: expected class-name before ‘{’ token
kgmArray.h: In constructor ‘kgmArray<T>::kgmArray()’:
kgmArray.h:9: error: class ‘kgmArray<T>’ does not have any field named ‘kgmMemory’
kgmArray.h: In constructor ‘kgmArray<T>::kgmArray(uint)’:
kgmArray.h:13: error: class ‘kgmArray<T>’ does not have any field named ‘kgmMemory’
kgmArray.h: In member function ‘void kgmArray<T>::operator=(const kgmArray<T>&)’:
kgmArray.h:24: error: there are no arguments to ‘clear’ that depend on a template parameter, so a declaration of ‘clear’ mus
t be available                                                                                                             
kgmArray.h:24: note: (if you use ‘-fpermissive’, G++ will accept your code, but allowing the use of an undeclared name is de
precated)                                                                                                                  
kgmArray.h:25: error: ‘o’ was not declared in this scope
kgmArray.h: In member function ‘void kgmArray<T>::realloc(uint)’:
kgmArray.h:31: error: ‘m_data’ was not declared in this scope
kgmArray.h:32: error: ‘m_length’ was not declared in this scope
kgmArray.h:34: error: ‘new_Count’ was not declared in this scope
kgmArray.h: In member function ‘void kgmArray<T>::add(const T&)’:
kgmArray.h:43: error: ‘m_length’ was not declared in this scope
kgmArray.h:44: error: ‘m_data’ was not declared in this scope
In file included from kgmFile.h:3,
                 from kgmArchive.h:9,
                 from kgmArchive.cpp:5:
kgmString.h: At global scope:
kgmString.h:10: error: expected class-name before ‘{’ token
kgmString.h: In constructor ‘kgmTString<T>::kgmTString()’:
kgmString.h:13: error: class ‘kgmTString<T>’ does not have any field named ‘kgmArray’
kgmString.h: In destructor ‘virtual kgmTString<T>::~kgmTString()’:
kgmString.h:25: error: there are no arguments to ‘clear’ that depend on a template parameter, so a declaration of ‘clear’ mu
st be available                                                                                                            
kgmString.h: In member function ‘kgmTString<T>& kgmTString<T>::operator=(const T*)’:
kgmString.h:30: error: there are no arguments to ‘clear’ that depend on a template parameter, so a declaration of ‘clear’ mu
st be available                                                                                                            
kgmString.h: In member function ‘kgmTString<T>& kgmTString<T>::operator=(const kgmTString<T>&)’:
kgmString.h:40: error: there are no arguments to ‘clear’ that depend on a template parameter, so a declaration of ‘clear’ mu
st be available                                                                                                            
kgmString.h: In member function ‘kgmTString<T>& kgmTString<T>::operator+=(const kgmTString<T>&)’:
kgmString.h:48: error: ‘m_length’ was not declared in this scope
kgmString.h:52: error: ‘m_data’ was not declared in this scope
kgmString.h:54: error: there are no arguments to ‘clear’ that depend on a template parameter, so a declaration of ‘clear’ mu
st be available                                                                                                            
kgmString.h: In member function ‘T& kgmTString<T>::operator[](uint)’:
kgmString.h:68: error: ‘m_data’ was not declared in this scope
kgmString.h: In member function ‘bool kgmTString<T>::operator==(const kgmTString<T>&)’:
kgmString.h:72: error: ‘m_data’ was not declared in this scope
kgmString.h:72: error: ‘m_length’ was not declared in this scope
kgmString.h: In member function ‘bool kgmTString<T>::operator==(const T*)’:
kgmString.h:76: error: ‘m_data’ was not declared in this scope
kgmString.h:76: error: ‘m_length’ was not declared in this scope
kgmString.h: In member function ‘kgmTString<T>::operator T*() const’:
kgmString.h:81: error: ‘m_data’ was not declared in this scope
kgmString.h: In member function ‘kgmTString<T>::operator const T*() const’:
kgmString.h:85: error: ‘m_data’ was not declared in this scope
kgmString.h: In member function ‘void kgmTString<T>::alloc(uint)’:
kgmString.h:90: error: there are no arguments to ‘clear’ that depend on a template parameter, so a declaration of ‘clear’ mu
st be available                                                                                                            
kgmString.h:91: error: ‘m_length’ was not declared in this scope
kgmString.h:92: error: ‘m_data’ was not declared in this scope
kgmString.h: In member function ‘void kgmTString<T>::alloc(T*, uint)’:
kgmString.h:97: error: there are no arguments to ‘clear’ that depend on a template parameter, so a declaration of ‘clear’ mu
st be available                                                                                                            
kgmString.h:98: error: ‘m_length’ was not declared in this scope
kgmString.h:99: error: ‘m_data’ was not declared in this scope
kgmString.h: In member function ‘void kgmTString<T>::toUpper()’:
kgmString.h:105: error: ‘m_data’ was not declared in this scope
kgmString.h:110: error: ‘m_length’ was not declared in this scope
kgmString.h:111: error: ‘m_data’ was not declared in this scope
kgmString.h: In member function ‘void kgmTString<T>::toLower()’:
kgmString.h:116: error: ‘m_data’ was not declared in this scope
kgmString.h:121: error: ‘m_length’ was not declared in this scope
kgmString.h:122: error: ‘m_data’ was not declared in this scope
kgmString.h: In member function ‘int kgmTString<T>::exist(T&)’:
kgmString.h:127: error: ‘m_length’ was not declared in this scope
kgmString.h:128: error: ‘m_data’ was not declared in this scope
kgmString.h: In member function ‘T* kgmTString<T>::pointer(uint)’:
kgmString.h:134: error: ‘m_length’ was not declared in this scope
kgmString.h:136: error: ‘m_data’ was not declared in this scope
kgmString.h: In member function ‘kgmTString<T> kgmTString<T>::tokenize(kgmTString<T>&, unsigned int&)’:
kgmString.h:147: error: there are no arguments to ‘length’ that depend on a template parameter, so a declaration of ‘length’
 must be available                                                                                                         
kgmString.h:152: error: there are no arguments to ‘length’ that depend on a template parameter, so a declaration of ‘length’
 must be available                                                                                                         
kgmString.h:157: error: there are no arguments to ‘length’ that depend on a template parameter, so a declaration of ‘length’
 must be available                                                                                                         
kgmString.h:161: error: there are no arguments to ‘length’ that depend on a template parameter, so a declaration of ‘length’
 must be available                                                                                                         
kgmString.h:167: error: ‘m_str’ was not declared in this scope
kgmString.h: In member function ‘bool kgmTString<T>::string(T, T, kgmTString<T>&)’:
kgmString.h:190: error: ‘m_str’ was not declared in this scope
kgmString.h: In member function ‘void kgmTString<T>::string(T*)’:
kgmString.h:197: error: ‘m_str’ was not declared in this scope
kgmString.h:197: error: ‘m_size’ was not declared in this scope
kgmString.h: In member function ‘int kgmTString<T>::find(T, int)’:
kgmString.h:203: error: ‘m_length’ was not declared in this scope
kgmString.h:205: error: ‘m_length’ was not declared in this scope
kgmString.h:206: error: ‘m_data’ was not declared in this scope
In file included from kgmArchive.cpp:5:
kgmArchive.h: In member function ‘bool kgmArchive::open(kgmCString&)’:
kgmArchive.h:69: error: ‘class kgmTString<char>’ has no member named ‘length’
kgmArchive.h: In member function ‘bool kgmArchive::append(kgmCString&)’:
kgmArchive.h:120: error: ‘class kgmTString<char>’ has no member named ‘length’
In file included from kgmString.h:2,
                 from kgmFile.h:3,
                 from kgmFile.cpp:1:
kgmArray.h:6: error: expected class-name before ‘{’ token
kgmArray.h: In constructor ‘kgmArray<T>::kgmArray()’:
kgmArray.h:9: error: class ‘kgmArray<T>’ does not have any field named ‘kgmMemory’
kgmArray.h: In constructor ‘kgmArray<T>::kgmArray(uint)’:
kgmArray.h:13: error: class ‘kgmArray<T>’ does not have any field named ‘kgmMemory’
kgmArray.h: In member function ‘void kgmArray<T>::operator=(const kgmArray<T>&)’:
kgmArray.h:24: error: there are no arguments to ‘clear’ that depend on a template parameter, so a declaration of ‘clear’ mus
t be available                                                                                                             
kgmArray.h:24: note: (if you use ‘-fpermissive’, G++ will accept your code, but allowing the use of an undeclared name is de
precated)                                                                                                                  
kgmArray.h:25: error: ‘o’ was not declared in this scope
kgmArray.h: In member function ‘void kgmArray<T>::realloc(uint)’:
kgmArray.h:31: error: ‘m_data’ was not declared in this scope
kgmArray.h:32: error: ‘m_length’ was not declared in this scope
kgmArray.h:34: error: ‘new_Count’ was not declared in this scope
kgmArray.h: In member function ‘void kgmArray<T>::add(const T&)’:
kgmArray.h:43: error: ‘m_length’ was not declared in this scope
kgmArray.h:44: error: ‘m_data’ was not declared in this scope
In file included from kgmFile.h:3,
                 from kgmFile.cpp:1:
kgmString.h: At global scope:
kgmString.h:10: error: expected class-name before ‘{’ token
kgmString.h: In constructor ‘kgmTString<T>::kgmTString()’:
kgmString.h:13: error: class ‘kgmTString<T>’ does not have any field named ‘kgmArray’
kgmString.h: In destructor ‘virtual kgmTString<T>::~kgmTString()’:
kgmString.h:25: error: there are no arguments to ‘clear’ that depend on a template parameter, so a declaration of ‘clear’ mu
st be available                                                                                                            
kgmString.h: In member function ‘kgmTString<T>& kgmTString<T>::operator=(const T*)’:
kgmString.h:30: error: there are no arguments to ‘clear’ that depend on a template parameter, so a declaration of ‘clear’ mu
st be available                                                                                                            
kgmString.h: In member function ‘kgmTString<T>& kgmTString<T>::operator=(const kgmTString<T>&)’:
kgmString.h:40: error: there are no arguments to ‘clear’ that depend on a template parameter, so a declaration of ‘clear’ mu
st be available                                                                                                            
kgmString.h: In member function ‘kgmTString<T>& kgmTString<T>::operator+=(const kgmTString<T>&)’:
kgmString.h:48: error: ‘m_length’ was not declared in this scope
kgmString.h:52: error: ‘m_data’ was not declared in this scope
kgmString.h:54: error: there are no arguments to ‘clear’ that depend on a template parameter, so a declaration of ‘clear’ mu
st be available                                                                                                            
kgmString.h: In member function ‘T& kgmTString<T>::operator[](uint)’:
kgmString.h:68: error: ‘m_data’ was not declared in this scope
kgmString.h: In member function ‘bool kgmTString<T>::operator==(const kgmTString<T>&)’:
kgmString.h:72: error: ‘m_data’ was not declared in this scope
kgmString.h:72: error: ‘m_length’ was not declared in this scope
kgmString.h: In member function ‘bool kgmTString<T>::operator==(const T*)’:
kgmString.h:76: error: ‘m_data’ was not declared in this scope
kgmString.h:76: error: ‘m_length’ was not declared in this scope
kgmString.h: In member function ‘kgmTString<T>::operator T*() const’:
kgmString.h:81: error: ‘m_data’ was not declared in this scope
kgmString.h: In member function ‘kgmTString<T>::operator const T*() const’:
kgmString.h:85: error: ‘m_data’ was not declared in this scope
kgmString.h: In member function ‘void kgmTString<T>::alloc(uint)’:
kgmString.h:90: error: there are no arguments to ‘clear’ that depend on a template parameter, so a declaration of ‘clear’ mu
st be available                                                                                                            
kgmString.h:91: error: ‘m_length’ was not declared in this scope
kgmString.h:92: error: ‘m_data’ was not declared in this scope
kgmString.h: In member function ‘void kgmTString<T>::alloc(T*, uint)’:
kgmString.h:97: error: there are no arguments to ‘clear’ that depend on a template parameter, so a declaration of ‘clear’ mu
st be available                                                                                                            
kgmString.h:98: error: ‘m_length’ was not declared in this scope
kgmString.h:99: error: ‘m_data’ was not declared in this scope
kgmString.h: In member function ‘void kgmTString<T>::toUpper()’:
kgmString.h:105: error: ‘m_data’ was not declared in this scope
kgmString.h:110: error: ‘m_length’ was not declared in this scope
kgmString.h:111: error: ‘m_data’ was not declared in this scope
kgmString.h: In member function ‘void kgmTString<T>::toLower()’:
kgmString.h:116: error: ‘m_data’ was not declared in this scope
kgmString.h:121: error: ‘m_length’ was not declared in this scope
kgmString.h:122: error: ‘m_data’ was not declared in this scope
kgmString.h: In member function ‘int kgmTString<T>::exist(T&)’:
kgmString.h:127: error: ‘m_length’ was not declared in this scope
kgmString.h:128: error: ‘m_data’ was not declared in this scope
kgmString.h: In member function ‘T* kgmTString<T>::pointer(uint)’:
kgmString.h:134: error: ‘m_length’ was not declared in this scope
kgmString.h:136: error: ‘m_data’ was not declared in this scope
kgmString.h: In member function ‘kgmTString<T> kgmTString<T>::tokenize(kgmTString<T>&, unsigned int&)’:
kgmString.h:147: error: there are no arguments to ‘length’ that depend on a template parameter, so a declaration of ‘length’
 must be available                                                                                                         
kgmString.h:152: error: there are no arguments to ‘length’ that depend on a template parameter, so a declaration of ‘length’
 must be available                                                                                                         
kgmString.h:157: error: there are no arguments to ‘length’ that depend on a template parameter, so a declaration of ‘length’
 must be available                                                                                                         
kgmString.h:161: error: there are no arguments to ‘length’ that depend on a template parameter, so a declaration of ‘length’
 must be available                                                                                                         
kgmString.h:167: error: ‘m_str’ was not declared in this scope
kgmString.h: In member function ‘bool kgmTString<T>::string(T, T, kgmTString<T>&)’:
kgmString.h:190: error: ‘m_str’ was not declared in this scope
kgmString.h: In member function ‘void kgmTString<T>::string(T*)’:
kgmString.h:197: error: ‘m_str’ was not declared in this scope
kgmString.h:197: error: ‘m_size’ was not declared in this scope
kgmString.h: In member function ‘int kgmTString<T>::find(T, int)’:
kgmString.h:203: error: ‘m_length’ was not declared in this scope
kgmString.h:205: error: ‘m_length’ was not declared in this scope
kgmString.h:206: error: ‘m_data’ was not declared in this scope
In file included from kgmString.h:2,
                 from kgmResource.h:3,
                 from kgmMain.cpp:2:
kgmArray.h:6: error: expected class-name before ‘{’ token
kgmArray.h: In constructor ‘kgmArray<T>::kgmArray()’:
kgmArray.h:9: error: class ‘kgmArray<T>’ does not have any field named ‘kgmMemory’
kgmArray.h: In constructor ‘kgmArray<T>::kgmArray(uint)’:
kgmArray.h:13: error: class ‘kgmArray<T>’ does not have any field named ‘kgmMemory’
kgmArray.h: In member function ‘void kgmArray<T>::operator=(const kgmArray<T>&)’:
kgmArray.h:24: error: there are no arguments to ‘clear’ that depend on a template parameter, so a declaration of ‘clear’ mus
t be available                                                                                                             
kgmArray.h:24: note: (if you use ‘-fpermissive’, G++ will accept your code, but allowing the use of an undeclared name is de
precated)                                                                                                                  
kgmArray.h:25: error: ‘o’ was not declared in this scope
kgmArray.h: In member function ‘void kgmArray<T>::realloc(uint)’:
kgmArray.h:31: error: ‘m_data’ was not declared in this scope
kgmArray.h:32: error: ‘m_length’ was not declared in this scope
kgmArray.h:34: error: ‘new_Count’ was not declared in this scope
kgmArray.h: In member function ‘void kgmArray<T>::add(const T&)’:
kgmArray.h:43: error: ‘m_length’ was not declared in this scope
kgmArray.h:44: error: ‘m_data’ was not declared in this scope
In file included from kgmResource.h:3,
                 from kgmMain.cpp:2:
kgmString.h: At global scope:
kgmString.h:10: error: expected class-name before ‘{’ token
kgmString.h: In constructor ‘kgmTString<T>::kgmTString()’:
kgmString.h:13: error: class ‘kgmTString<T>’ does not have any field named ‘kgmArray’
kgmString.h: In destructor ‘virtual kgmTString<T>::~kgmTString()’:
kgmString.h:25: error: there are no arguments to ‘clear’ that depend on a template parameter, so a declaration of ‘clear’ mu
st be available                                                                                                            
kgmString.h: In member function ‘kgmTString<T>& kgmTString<T>::operator=(const T*)’:
kgmString.h:30: error: there are no arguments to ‘clear’ that depend on a template parameter, so a declaration of ‘clear’ mu
st be available                                                                                                            
kgmString.h: In member function ‘kgmTString<T>& kgmTString<T>::operator=(const kgmTString<T>&)’:
kgmString.h:40: error: there are no arguments to ‘clear’ that depend on a template parameter, so a declaration of ‘clear’ mu
st be available                                                                                                            
kgmString.h: In member function ‘kgmTString<T>& kgmTString<T>::operator+=(const kgmTString<T>&)’:
kgmString.h:48: error: ‘m_length’ was not declared in this scope
kgmString.h:52: error: ‘m_data’ was not declared in this scope
kgmString.h:54: error: there are no arguments to ‘clear’ that depend on a template parameter, so a declaration of ‘clear’ mu
st be available                                                                                                            
kgmString.h: In member function ‘T& kgmTString<T>::operator[](uint)’:
kgmString.h:68: error: ‘m_data’ was not declared in this scope
kgmString.h: In member function ‘bool kgmTString<T>::operator==(const kgmTString<T>&)’:
kgmString.h:72: error: ‘m_data’ was not declared in this scope
kgmString.h:72: error: ‘m_length’ was not declared in this scope
kgmString.h: In member function ‘bool kgmTString<T>::operator==(const T*)’:
kgmString.h:76: error: ‘m_data’ was not declared in this scope
kgmString.h:76: error: ‘m_length’ was not declared in this scope
kgmString.h: In member function ‘kgmTString<T>::operator T*() const’:
kgmString.h:81: error: ‘m_data’ was not declared in this scope
kgmString.h: In member function ‘kgmTString<T>::operator const T*() const’:
kgmString.h:85: error: ‘m_data’ was not declared in this scope
kgmString.h: In member function ‘void kgmTString<T>::alloc(uint)’:
kgmString.h:90: error: there are no arguments to ‘clear’ that depend on a template parameter, so a declaration of ‘clear’ mu
st be available                                                                                                            
kgmString.h:91: error: ‘m_length’ was not declared in this scope
kgmString.h:92: error: ‘m_data’ was not declared in this scope
kgmString.h: In member function ‘void kgmTString<T>::alloc(T*, uint)’:
kgmString.h:97: error: there are no arguments to ‘clear’ that depend on a template parameter, so a declaration of ‘clear’ mu
st be available                                                                                                            
kgmString.h:98: error: ‘m_length’ was not declared in this scope
kgmString.h:99: error: ‘m_data’ was not declared in this scope
kgmString.h: In member function ‘void kgmTString<T>::toUpper()’:
kgmString.h:105: error: ‘m_data’ was not declared in this scope
kgmString.h:110: error: ‘m_length’ was not declared in this scope
kgmString.h:111: error: ‘m_data’ was not declared in this scope
kgmString.h: In member function ‘void kgmTString<T>::toLower()’:
kgmString.h:116: error: ‘m_data’ was not declared in this scope
kgmString.h:121: error: ‘m_length’ was not declared in this scope
kgmString.h:122: error: ‘m_data’ was not declared in this scope
kgmString.h: In member function ‘int kgmTString<T>::exist(T&)’:
kgmString.h:127: error: ‘m_length’ was not declared in this scope
kgmString.h:128: error: ‘m_data’ was not declared in this scope
kgmString.h: In member function ‘T* kgmTString<T>::pointer(uint)’:
kgmString.h:134: error: ‘m_length’ was not declared in this scope
kgmString.h:136: error: ‘m_data’ was not declared in this scope
kgmString.h: In member function ‘kgmTString<T> kgmTString<T>::tokenize(kgmTString<T>&, unsigned int&)’:
kgmString.h:147: error: there are no arguments to ‘length’ that depend on a template parameter, so a declaration of ‘length’
 must be available                                                                                                         
kgmString.h:152: error: there are no arguments to ‘length’ that depend on a template parameter, so a declaration of ‘length’
 must be available                                                                                                         
kgmString.h:157: error: there are no arguments to ‘length’ that depend on a template parameter, so a declaration of ‘length’
 must be available                                                                                                         
kgmString.h:161: error: there are no arguments to ‘length’ that depend on a template parameter, so a declaration of ‘length’
 must be available                                                                                                         
kgmString.h:167: error: ‘m_str’ was not declared in this scope
kgmString.h: In member function ‘bool kgmTString<T>::string(T, T, kgmTString<T>&)’:
kgmString.h:190: error: ‘m_str’ was not declared in this scope
kgmString.h: In member function ‘void kgmTString<T>::string(T*)’:
kgmString.h:197: error: ‘m_str’ was not declared in this scope
kgmString.h:197: error: ‘m_size’ was not declared in this scope
kgmString.h: In member function ‘int kgmTString<T>::find(T, int)’:
kgmString.h:203: error: ‘m_length’ was not declared in this scope
kgmString.h:205: error: ‘m_length’ was not declared in this scope
kgmString.h:206: error: ‘m_data’ was not declared in this scope
In file included from ../kgmMain/kgmString.h:2,
                 from ../kgmMain/kgmResource.h:3,
                 from kgmSound.h:2,
                 from kgmOAL.h:8,
                 from kgmOAL.cpp:5:
../kgmMain/kgmArray.h:6: error: expected class-name before ‘{’ token
../kgmMain/kgmArray.h: In constructor ‘kgmArray<T>::kgmArray()’:
../kgmMain/kgmArray.h:9: error: class ‘kgmArray<T>’ does not have any field named ‘kgmMemory’
../kgmMain/kgmArray.h: In constructor ‘kgmArray<T>::kgmArray(uint)’:
../kgmMain/kgmArray.h:13: error: class ‘kgmArray<T>’ does not have any field named ‘kgmMemory’
../kgmMain/kgmArray.h: In member function ‘void kgmArray<T>::operator=(const kgmArray<T>&)’:
../kgmMain/kgmArray.h:24: error: there are no arguments to ‘clear’ that depend on a template parameter, so a declaration of 
‘clear’ must be available                                                                                                  
../kgmMain/kgmArray.h:24: note: (if you use ‘-fpermissive’, G++ will accept your code, but allowing the use of an undeclared
 name is deprecated)                                                                                                       
../kgmMain/kgmArray.h:25: error: ‘o’ was not declared in this scope
../kgmMain/kgmArray.h: In member function ‘void kgmArray<T>::realloc(uint)’:
../kgmMain/kgmArray.h:31: error: ‘m_data’ was not declared in this scope
../kgmMain/kgmArray.h:32: error: ‘m_length’ was not declared in this scope
../kgmMain/kgmArray.h:34: error: ‘new_Count’ was not declared in this scope
../kgmMain/kgmArray.h: In member function ‘void kgmArray<T>::add(const T&)’:
../kgmMain/kgmArray.h:43: error: ‘m_length’ was not declared in this scope
../kgmMain/kgmArray.h:44: error: ‘m_data’ was not declared in this scope
In file included from ../kgmMain/kgmResource.h:3,
                 from kgmSound.h:2,
                 from kgmOAL.h:8,
                 from kgmOAL.cpp:5:
../kgmMain/kgmString.h: At global scope:
../kgmMain/kgmString.h:10: error: expected class-name before ‘{’ token
../kgmMain/kgmString.h: In constructor ‘kgmTString<T>::kgmTString()’:
../kgmMain/kgmString.h:13: error: class ‘kgmTString<T>’ does not have any field named ‘kgmArray’
../kgmMain/kgmString.h: In destructor ‘virtual kgmTString<T>::~kgmTString()’:
../kgmMain/kgmString.h:25: error: there are no arguments to ‘clear’ that depend on a template parameter, so a declaration of
 ‘clear’ must be available                                                                                                 
../kgmMain/kgmString.h: In member function ‘kgmTString<T>& kgmTString<T>::operator=(const T*)’:
../kgmMain/kgmString.h:30: error: there are no arguments to ‘clear’ that depend on a template parameter, so a declaration of
 ‘clear’ must be available                                                                                                 
../kgmMain/kgmString.h: In member function ‘kgmTString<T>& kgmTString<T>::operator=(const kgmTString<T>&)’:
../kgmMain/kgmString.h:40: error: there are no arguments to ‘clear’ that depend on a template parameter, so a declaration of
 ‘clear’ must be available                                                                                                 
../kgmMain/kgmString.h: In member function ‘kgmTString<T>& kgmTString<T>::operator+=(const kgmTString<T>&)’:
../kgmMain/kgmString.h:48: error: ‘m_length’ was not declared in this scope
../kgmMain/kgmString.h:52: error: ‘m_data’ was not declared in this scope
../kgmMain/kgmString.h:54: error: there are no arguments to ‘clear’ that depend on a template parameter, so a declaration of
 ‘clear’ must be available                                                                                                 
../kgmMain/kgmString.h: In member function ‘T& kgmTString<T>::operator[](uint)’:
../kgmMain/kgmString.h:68: error: ‘m_data’ was not declared in this scope
../kgmMain/kgmString.h: In member function ‘bool kgmTString<T>::operator==(const kgmTString<T>&)’:
../kgmMain/kgmString.h:72: error: ‘m_data’ was not declared in this scope
../kgmMain/kgmString.h:72: error: ‘m_length’ was not declared in this scope
../kgmMain/kgmString.h: In member function ‘bool kgmTString<T>::operator==(const T*)’:
../kgmMain/kgmString.h:76: error: ‘m_data’ was not declared in this scope
../kgmMain/kgmString.h:76: error: ‘m_length’ was not declared in this scope
../kgmMain/kgmString.h: In member function ‘kgmTString<T>::operator T*() const’:
../kgmMain/kgmString.h:81: error: ‘m_data’ was not declared in this scope
../kgmMain/kgmString.h: In member function ‘kgmTString<T>::operator const T*() const’:
../kgmMain/kgmString.h:85: error: ‘m_data’ was not declared in this scope
../kgmMain/kgmString.h: In member function ‘void kgmTString<T>::alloc(uint)’:
../kgmMain/kgmString.h:90: error: there are no arguments to ‘clear’ that depend on a template parameter, so a declaration of
 ‘clear’ must be available                                                                                                 
../kgmMain/kgmString.h:91: error: ‘m_length’ was not declared in this scope
../kgmMain/kgmString.h:92: error: ‘m_data’ was not declared in this scope
../kgmMain/kgmString.h: In member function ‘void kgmTString<T>::alloc(T*, uint)’:
../kgmMain/kgmString.h:97: error: there are no arguments to ‘clear’ that depend on a template parameter, so a declaration of
 ‘clear’ must be available                                                                                                 
../kgmMain/kgmString.h:98: error: ‘m_length’ was not declared in this scope
../kgmMain/kgmString.h:99: error: ‘m_data’ was not declared in this scope
../kgmMain/kgmString.h: In member function ‘void kgmTString<T>::toUpper()’:
../kgmMain/kgmString.h:105: error: ‘m_data’ was not declared in this scope
../kgmMain/kgmString.h:110: error: ‘m_length’ was not declared in this scope
../kgmMain/kgmString.h:111: error: ‘m_data’ was not declared in this scope
../kgmMain/kgmString.h: In member function ‘void kgmTString<T>::toLower()’:
../kgmMain/kgmString.h:116: error: ‘m_data’ was not declared in this scope
../kgmMain/kgmString.h:121: error: ‘m_length’ was not declared in this scope
../kgmMain/kgmString.h:122: error: ‘m_data’ was not declared in this scope
../kgmMain/kgmString.h: In member function ‘int kgmTString<T>::exist(T&)’:
../kgmMain/kgmString.h:127: error: ‘m_length’ was not declared in this scope
../kgmMain/kgmString.h:128: error: ‘m_data’ was not declared in this scope
../kgmMain/kgmString.h: In member function ‘T* kgmTString<T>::pointer(uint)’:
../kgmMain/kgmString.h:134: error: ‘m_length’ was not declared in this scope
../kgmMain/kgmString.h:136: error: ‘m_data’ was not declared in this scope
../kgmMain/kgmString.h: In member function ‘kgmTString<T> kgmTString<T>::tokenize(kgmTString<T>&, unsigned int&)’:
../kgmMain/kgmString.h:147: error: there are no arguments to ‘length’ that depend on a template parameter, so a declaration 
of ‘length’ must be available                                                                                              
../kgmMain/kgmString.h:152: error: there are no arguments to ‘length’ that depend on a template parameter, so a declaration 
of ‘length’ must be available                                                                                              
../kgmMain/kgmString.h:157: error: there are no arguments to ‘length’ that depend on a template parameter, so a declaration 
of ‘length’ must be available                                                                                              
../kgmMain/kgmString.h:161: error: there are no arguments to ‘length’ that depend on a template parameter, so a declaration 
of ‘length’ must be available                                                                                              
../kgmMain/kgmString.h:167: error: ‘m_str’ was not declared in this scope
../kgmMain/kgmString.h: In member function ‘bool kgmTString<T>::string(T, T, kgmTString<T>&)’:
../kgmMain/kgmString.h:190: error: ‘m_str’ was not declared in this scope
../kgmMain/kgmString.h: In member function ‘void kgmTString<T>::string(T*)’:
../kgmMain/kgmString.h:197: error: ‘m_str’ was not declared in this scope
../kgmMain/kgmString.h:197: error: ‘m_size’ was not declared in this scope
../kgmMain/kgmString.h: In member function ‘int kgmTString<T>::find(T, int)’:
../kgmMain/kgmString.h:203: error: ‘m_length’ was not declared in this scope
../kgmMain/kgmString.h:205: error: ‘m_length’ was not declared in this scope
../kgmMain/kgmString.h:206: error: ‘m_data’ was not declared in this scope
In file included from kgmString.h:2,
                 from kgmResource.h:3,
                 from kgmResource.cpp:1:
kgmArray.h:6: error: expected class-name before ‘{’ token
kgmArray.h: In constructor ‘kgmArray<T>::kgmArray()’:
kgmArray.h:9: error: class ‘kgmArray<T>’ does not have any field named ‘kgmMemory’
kgmArray.h: In constructor ‘kgmArray<T>::kgmArray(uint)’:
kgmArray.h:13: error: class ‘kgmArray<T>’ does not have any field named ‘kgmMemory’
kgmArray.h: In member function ‘void kgmArray<T>::operator=(const kgmArray<T>&)’:
kgmArray.h:24: error: there are no arguments to ‘clear’ that depend on a template parameter, so a declaration of ‘clear’ mus
t be available                                                                                                             
kgmArray.h:24: note: (if you use ‘-fpermissive’, G++ will accept your code, but allowing the use of an undeclared name is de
precated)                                                                                                                  
kgmArray.h:25: error: ‘o’ was not declared in this scope
kgmArray.h: In member function ‘void kgmArray<T>::realloc(uint)’:
kgmArray.h:31: error: ‘m_data’ was not declared in this scope
kgmArray.h:32: error: ‘m_length’ was not declared in this scope
kgmArray.h:34: error: ‘new_Count’ was not declared in this scope
kgmArray.h: In member function ‘void kgmArray<T>::add(const T&)’:
kgmArray.h:43: error: ‘m_length’ was not declared in this scope
kgmArray.h:44: error: ‘m_data’ was not declared in this scope
In file included from kgmResource.h:3,
                 from kgmResource.cpp:1:
kgmString.h: At global scope:
kgmString.h:10: error: expected class-name before ‘{’ token
kgmString.h: In constructor ‘kgmTString<T>::kgmTString()’:
kgmString.h:13: error: class ‘kgmTString<T>’ does not have any field named ‘kgmArray’
kgmString.h: In destructor ‘virtual kgmTString<T>::~kgmTString()’:
kgmString.h:25: error: there are no arguments to ‘clear’ that depend on a template parameter, so a declaration of ‘clear’ mu
st be available                                                                                                            
kgmString.h: In member function ‘kgmTString<T>& kgmTString<T>::operator=(const T*)’:
kgmString.h:30: error: there are no arguments to ‘clear’ that depend on a template parameter, so a declaration of ‘clear’ mu
st be available                                                                                                            
kgmString.h: In member function ‘kgmTString<T>& kgmTString<T>::operator=(const kgmTString<T>&)’:
kgmString.h:40: error: there are no arguments to ‘clear’ that depend on a template parameter, so a declaration of ‘clear’ mu
st be available                                                                                                            
kgmString.h: In member function ‘kgmTString<T>& kgmTString<T>::operator+=(const kgmTString<T>&)’:
kgmString.h:48: error: ‘m_length’ was not declared in this scope
kgmString.h:52: error: ‘m_data’ was not declared in this scope
kgmString.h:54: error: there are no arguments to ‘clear’ that depend on a template parameter, so a declaration of ‘clear’ mu
st be available                                                                                                            
kgmString.h: In member function ‘T& kgmTString<T>::operator[](uint)’:
kgmString.h:68: error: ‘m_data’ was not declared in this scope
kgmString.h: In member function ‘bool kgmTString<T>::operator==(const kgmTString<T>&)’:
kgmString.h:72: error: ‘m_data’ was not declared in this scope
kgmString.h:72: error: ‘m_length’ was not declared in this scope
kgmString.h: In member function ‘bool kgmTString<T>::operator==(const T*)’:
kgmString.h:76: error: ‘m_data’ was not declared in this scope
kgmString.h:76: error: ‘m_length’ was not declared in this scope
kgmString.h: In member function ‘kgmTString<T>::operator T*() const’:
kgmString.h:81: error: ‘m_data’ was not declared in this scope
kgmString.h: In member function ‘kgmTString<T>::operator const T*() const’:
kgmString.h:85: error: ‘m_data’ was not declared in this scope
kgmString.h: In member function ‘void kgmTString<T>::alloc(uint)’:
kgmString.h:90: error: there are no arguments to ‘clear’ that depend on a template parameter, so a declaration of ‘clear’ mu
st be available                                                                                                            
kgmString.h:91: error: ‘m_length’ was not declared in this scope
kgmString.h:92: error: ‘m_data’ was not declared in this scope
kgmString.h: In member function ‘void kgmTString<T>::alloc(T*, uint)’:
kgmString.h:97: error: there are no arguments to ‘clear’ that depend on a template parameter, so a declaration of ‘clear’ mu
st be available                                                                                                            
kgmString.h:98: error: ‘m_length’ was not declared in this scope
kgmString.h:99: error: ‘m_data’ was not declared in this scope
kgmString.h: In member function ‘void kgmTString<T>::toUpper()’:
kgmString.h:105: error: ‘m_data’ was not declared in this scope
kgmString.h:110: error: ‘m_length’ was not declared in this scope
kgmString.h:111: error: ‘m_data’ was not declared in this scope
kgmString.h: In member function ‘void kgmTString<T>::toLower()’:
kgmString.h:116: error: ‘m_data’ was not declared in this scope
kgmString.h:121: error: ‘m_length’ was not declared in this scope
kgmString.h:122: error: ‘m_data’ was not declared in this scope
kgmString.h: In member function ‘int kgmTString<T>::exist(T&)’:
kgmString.h:127: error: ‘m_length’ was not declared in this scope
kgmString.h:128: error: ‘m_data’ was not declared in this scope
kgmString.h: In member function ‘T* kgmTString<T>::pointer(uint)’:
kgmString.h:134: error: ‘m_length’ was not declared in this scope
kgmString.h:136: error: ‘m_data’ was not declared in this scope
kgmString.h: In member function ‘kgmTString<T> kgmTString<T>::tokenize(kgmTString<T>&, unsigned int&)’:
kgmString.h:147: error: there are no arguments to ‘length’ that depend on a template parameter, so a declaration of ‘length’
 must be available                                                                                                         
kgmString.h:152: error: there are no arguments to ‘length’ that depend on a template parameter, so a declaration of ‘length’
 must be available                                                                                                         
kgmString.h:157: error: there are no arguments to ‘length’ that depend on a template parameter, so a declaration of ‘length’
 must be available                                                                                                         
kgmString.h:161: error: there are no arguments to ‘length’ that depend on a template parameter, so a declaration of ‘length’
 must be available                                                                                                         
kgmString.h:167: error: ‘m_str’ was not declared in this scope
kgmString.h: In member function ‘bool kgmTString<T>::string(T, T, kgmTString<T>&)’:
kgmString.h:190: error: ‘m_str’ was not declared in this scope
kgmString.h: In member function ‘void kgmTString<T>::string(T*)’:
kgmString.h:197: error: ‘m_str’ was not declared in this scope
kgmString.h:197: error: ‘m_size’ was not declared in this scope
kgmString.h: In member function ‘int kgmTString<T>::find(T, int)’:
kgmString.h:203: error: ‘m_length’ was not declared in this scope
kgmString.h:205: error: ‘m_length’ was not declared in this scope
kgmString.h:206: error: ‘m_data’ was not declared in this scope
kgmString.h: In destructor ‘kgmTString<T>::~kgmTString() [with T = char]’:
kgmResource.cpp:5:   instantiated from here
kgmString.h:25: error: ‘clear’ was not declared in this scope
In file included from ../kgmMain/kgmString.h:2,
                 from ../kgmMain/kgmResource.h:3,
                 from kgmSound.h:2,
                 from kgmSound.cpp:1:
../kgmMain/kgmArray.h:6: error: expected class-name before ‘{’ token
../kgmMain/kgmArray.h: In constructor ‘kgmArray<T>::kgmArray()’:
../kgmMain/kgmArray.h:9: error: class ‘kgmArray<T>’ does not have any field named ‘kgmMemory’
../kgmMain/kgmArray.h: In constructor ‘kgmArray<T>::kgmArray(uint)’:
../kgmMain/kgmArray.h:13: error: class ‘kgmArray<T>’ does not have any field named ‘kgmMemory’
../kgmMain/kgmArray.h: In member function ‘void kgmArray<T>::operator=(const kgmArray<T>&)’:
../kgmMain/kgmArray.h:24: error: there are no arguments to ‘clear’ that depend on a template parameter, so a declaration of 
‘clear’ must be available                                                                                                  
../kgmMain/kgmArray.h:24: note: (if you use ‘-fpermissive’, G++ will accept your code, but allowing the use of an undeclared
 name is deprecated)                                                                                                       
../kgmMain/kgmArray.h:25: error: ‘o’ was not declared in this scope
../kgmMain/kgmArray.h: In member function ‘void kgmArray<T>::realloc(uint)’:
../kgmMain/kgmArray.h:31: error: ‘m_data’ was not declared in this scope
../kgmMain/kgmArray.h:32: error: ‘m_length’ was not declared in this scope
../kgmMain/kgmArray.h:34: error: ‘new_Count’ was not declared in this scope
../kgmMain/kgmArray.h: In member function ‘void kgmArray<T>::add(const T&)’:
../kgmMain/kgmArray.h:43: error: ‘m_length’ was not declared in this scope
../kgmMain/kgmArray.h:44: error: ‘m_data’ was not declared in this scope
In file included from ../kgmMain/kgmResource.h:3,
                 from kgmSound.h:2,
                 from kgmSound.cpp:1:
../kgmMain/kgmString.h: At global scope:
../kgmMain/kgmString.h:10: error: expected class-name before ‘{’ token
../kgmMain/kgmString.h: In constructor ‘kgmTString<T>::kgmTString()’:
../kgmMain/kgmString.h:13: error: class ‘kgmTString<T>’ does not have any field named ‘kgmArray’
../kgmMain/kgmString.h: In destructor ‘virtual kgmTString<T>::~kgmTString()’:
../kgmMain/kgmString.h:25: error: there are no arguments to ‘clear’ that depend on a template parameter, so a declaration of
 ‘clear’ must be available                                                                                                 
../kgmMain/kgmString.h: In member function ‘kgmTString<T>& kgmTString<T>::operator=(const T*)’:
../kgmMain/kgmString.h:30: error: there are no arguments to ‘clear’ that depend on a template parameter, so a declaration of
 ‘clear’ must be available                                                                                                 
../kgmMain/kgmString.h: In member function ‘kgmTString<T>& kgmTString<T>::operator=(const kgmTString<T>&)’:
../kgmMain/kgmString.h:40: error: there are no arguments to ‘clear’ that depend on a template parameter, so a declaration of
 ‘clear’ must be available                                                                                                 
../kgmMain/kgmString.h: In member function ‘kgmTString<T>& kgmTString<T>::operator+=(const kgmTString<T>&)’:
../kgmMain/kgmString.h:48: error: ‘m_length’ was not declared in this scope
../kgmMain/kgmString.h:52: error: ‘m_data’ was not declared in this scope
../kgmMain/kgmString.h:54: error: there are no arguments to ‘clear’ that depend on a template parameter, so a declaration of
 ‘clear’ must be available                                                                                                 
../kgmMain/kgmString.h: In member function ‘T& kgmTString<T>::operator[](uint)’:
../kgmMain/kgmString.h:68: error: ‘m_data’ was not declared in this scope
../kgmMain/kgmString.h: In member function ‘bool kgmTString<T>::operator==(const kgmTString<T>&)’:
../kgmMain/kgmString.h:72: error: ‘m_data’ was not declared in this scope
../kgmMain/kgmString.h:72: error: ‘m_length’ was not declared in this scope
../kgmMain/kgmString.h: In member function ‘bool kgmTString<T>::operator==(const T*)’:
../kgmMain/kgmString.h:76: error: ‘m_data’ was not declared in this scope
../kgmMain/kgmString.h:76: error: ‘m_length’ was not declared in this scope
../kgmMain/kgmString.h: In member function ‘kgmTString<T>::operator T*() const’:
../kgmMain/kgmString.h:81: error: ‘m_data’ was not declared in this scope
../kgmMain/kgmString.h: In member function ‘kgmTString<T>::operator const T*() const’:
../kgmMain/kgmString.h:85: error: ‘m_data’ was not declared in this scope
../kgmMain/kgmString.h: In member function ‘void kgmTString<T>::alloc(uint)’:
../kgmMain/kgmString.h:90: error: there are no arguments to ‘clear’ that depend on a template parameter, so a declaration of
 ‘clear’ must be available                                                                                                 
../kgmMain/kgmString.h:91: error: ‘m_length’ was not declared in this scope
../kgmMain/kgmString.h:92: error: ‘m_data’ was not declared in this scope
../kgmMain/kgmString.h: In member function ‘void kgmTString<T>::alloc(T*, uint)’:
../kgmMain/kgmString.h:97: error: there are no arguments to ‘clear’ that depend on a template parameter, so a declaration of
 ‘clear’ must be available                                                                                                 
../kgmMain/kgmString.h:98: error: ‘m_length’ was not declared in this scope
../kgmMain/kgmString.h:99: error: ‘m_data’ was not declared in this scope
../kgmMain/kgmString.h: In member function ‘void kgmTString<T>::toUpper()’:
../kgmMain/kgmString.h:105: error: ‘m_data’ was not declared in this scope
../kgmMain/kgmString.h:110: error: ‘m_length’ was not declared in this scope
../kgmMain/kgmString.h:111: error: ‘m_data’ was not declared in this scope
../kgmMain/kgmString.h: In member function ‘void kgmTString<T>::toLower()’:
../kgmMain/kgmString.h:116: error: ‘m_data’ was not declared in this scope
../kgmMain/kgmString.h:121: error: ‘m_length’ was not declared in this scope
../kgmMain/kgmString.h:122: error: ‘m_data’ was not declared in this scope
../kgmMain/kgmString.h: In member function ‘int kgmTString<T>::exist(T&)’:
../kgmMain/kgmString.h:127: error: ‘m_length’ was not declared in this scope
../kgmMain/kgmString.h:128: error: ‘m_data’ was not declared in this scope
../kgmMain/kgmString.h: In member function ‘T* kgmTString<T>::pointer(uint)’:
../kgmMain/kgmString.h:134: error: ‘m_length’ was not declared in this scope
../kgmMain/kgmString.h:136: error: ‘m_data’ was not declared in this scope
../kgmMain/kgmString.h: In member function ‘kgmTString<T> kgmTString<T>::tokenize(kgmTString<T>&, unsigned int&)’:
../kgmMain/kgmString.h:147: error: there are no arguments to ‘length’ that depend on a template parameter, so a declaration 
of ‘length’ must be available                                                                                              
../kgmMain/kgmString.h:152: error: there are no arguments to ‘length’ that depend on a template parameter, so a declaration 
of ‘length’ must be available                                                                                              
../kgmMain/kgmString.h:157: error: there are no arguments to ‘length’ that depend on a template parameter, so a declaration 
of ‘length’ must be available                                                                                              
../kgmMain/kgmString.h:161: error: there are no arguments to ‘length’ that depend on a template parameter, so a declaration 
of ‘length’ must be available                                                                                              
../kgmMain/kgmString.h:167: error: ‘m_str’ was not declared in this scope
../kgmMain/kgmString.h: In member function ‘bool kgmTString<T>::string(T, T, kgmTString<T>&)’:
../kgmMain/kgmString.h:190: error: ‘m_str’ was not declared in this scope
../kgmMain/kgmString.h: In member function ‘void kgmTString<T>::string(T*)’:
../kgmMain/kgmString.h:197: error: ‘m_str’ was not declared in this scope
../kgmMain/kgmString.h:197: error: ‘m_size’ was not declared in this scope
../kgmMain/kgmString.h: In member function ‘int kgmTString<T>::find(T, int)’:
../kgmMain/kgmString.h:203: error: ‘m_length’ was not declared in this scope
../kgmMain/kgmString.h:205: error: ‘m_length’ was not declared in this scope
../kgmMain/kgmString.h:206: error: ‘m_data’ was not declared in this scope
In file included from kgmString.h:2,
                 from kgmSystem.h:3,
                 from kgmSystem.cpp:1:
kgmArray.h:6: error: expected class-name before ‘{’ token
kgmArray.h: In constructor ‘kgmArray<T>::kgmArray()’:
kgmArray.h:9: error: class ‘kgmArray<T>’ does not have any field named ‘kgmMemory’
kgmArray.h: In constructor ‘kgmArray<T>::kgmArray(uint)’:
kgmArray.h:13: error: class ‘kgmArray<T>’ does not have any field named ‘kgmMemory’
kgmArray.h: In member function ‘void kgmArray<T>::operator=(const kgmArray<T>&)’:
kgmArray.h:24: error: there are no arguments to ‘clear’ that depend on a template parameter, so a declaration of ‘clear’ mus
t be available                                                                                                             
kgmArray.h:24: note: (if you use ‘-fpermissive’, G++ will accept your code, but allowing the use of an undeclared name is de
precated)                                                                                                                  
kgmArray.h:25: error: ‘o’ was not declared in this scope
kgmArray.h: In member function ‘void kgmArray<T>::realloc(uint)’:
kgmArray.h:31: error: ‘m_data’ was not declared in this scope
kgmArray.h:32: error: ‘m_length’ was not declared in this scope
kgmArray.h:34: error: ‘new_Count’ was not declared in this scope
kgmArray.h: In member function ‘void kgmArray<T>::add(const T&)’:
kgmArray.h:43: error: ‘m_length’ was not declared in this scope
kgmArray.h:44: error: ‘m_data’ was not declared in this scope
In file included from kgmSystem.h:3,
                 from kgmSystem.cpp:1:
kgmString.h: At global scope:
kgmString.h:10: error: expected class-name before ‘{’ token
kgmString.h: In constructor ‘kgmTString<T>::kgmTString()’:
kgmString.h:13: error: class ‘kgmTString<T>’ does not have any field named ‘kgmArray’
kgmString.h: In destructor ‘virtual kgmTString<T>::~kgmTString()’:
kgmString.h:25: error: there are no arguments to ‘clear’ that depend on a template parameter, so a declaration of ‘clear’ mu
st be available                                                                                                            
kgmString.h: In member function ‘kgmTString<T>& kgmTString<T>::operator=(const T*)’:
kgmString.h:30: error: there are no arguments to ‘clear’ that depend on a template parameter, so a declaration of ‘clear’ mu
st be available                                                                                                            
kgmString.h: In member function ‘kgmTString<T>& kgmTString<T>::operator=(const kgmTString<T>&)’:
kgmString.h:40: error: there are no arguments to ‘clear’ that depend on a template parameter, so a declaration of ‘clear’ mu
st be available                                                                                                            
kgmString.h: In member function ‘kgmTString<T>& kgmTString<T>::operator+=(const kgmTString<T>&)’:
kgmString.h:48: error: ‘m_length’ was not declared in this scope
kgmString.h:52: error: ‘m_data’ was not declared in this scope
kgmString.h:54: error: there are no arguments to ‘clear’ that depend on a template parameter, so a declaration of ‘clear’ mu
st be available                                                                                                            
kgmString.h: In member function ‘T& kgmTString<T>::operator[](uint)’:
kgmString.h:68: error: ‘m_data’ was not declared in this scope
kgmString.h: In member function ‘bool kgmTString<T>::operator==(const kgmTString<T>&)’:
kgmString.h:72: error: ‘m_data’ was not declared in this scope
kgmString.h:72: error: ‘m_length’ was not declared in this scope
kgmString.h: In member function ‘bool kgmTString<T>::operator==(const T*)’:
kgmString.h:76: error: ‘m_data’ was not declared in this scope
kgmString.h:76: error: ‘m_length’ was not declared in this scope
kgmString.h: In member function ‘kgmTString<T>::operator T*() const’:
kgmString.h:81: error: ‘m_data’ was not declared in this scope
kgmString.h: In member function ‘kgmTString<T>::operator const T*() const’:
kgmString.h:85: error: ‘m_data’ was not declared in this scope
kgmString.h: In member function ‘void kgmTString<T>::alloc(uint)’:
kgmString.h:90: error: there are no arguments to ‘clear’ that depend on a template parameter, so a declaration of ‘clear’ mu
st be available                                                                                                            
kgmString.h:91: error: ‘m_length’ was not declared in this scope
kgmString.h:92: error: ‘m_data’ was not declared in this scope
kgmString.h: In member function ‘void kgmTString<T>::alloc(T*, uint)’:
kgmString.h:97: error: there are no arguments to ‘clear’ that depend on a template parameter, so a declaration of ‘clear’ mu
st be available                                                                                                            
kgmString.h:98: error: ‘m_length’ was not declared in this scope
kgmString.h:99: error: ‘m_data’ was not declared in this scope
kgmString.h: In member function ‘void kgmTString<T>::toUpper()’:
kgmString.h:105: error: ‘m_data’ was not declared in this scope
kgmString.h:110: error: ‘m_length’ was not declared in this scope
kgmString.h:111: error: ‘m_data’ was not declared in this scope
kgmString.h: In member function ‘void kgmTString<T>::toLower()’:
kgmString.h:116: error: ‘m_data’ was not declared in this scope
kgmString.h:121: error: ‘m_length’ was not declared in this scope
kgmString.h:122: error: ‘m_data’ was not declared in this scope
kgmString.h: In member function ‘int kgmTString<T>::exist(T&)’:
kgmString.h:127: error: ‘m_length’ was not declared in this scope
kgmString.h:128: error: ‘m_data’ was not declared in this scope
kgmString.h: In member function ‘T* kgmTString<T>::pointer(uint)’:
kgmString.h:134: error: ‘m_length’ was not declared in this scope
kgmString.h:136: error: ‘m_data’ was not declared in this scope
kgmString.h: In member function ‘kgmTString<T> kgmTString<T>::tokenize(kgmTString<T>&, unsigned int&)’:
kgmString.h:147: error: there are no arguments to ‘length’ that depend on a template parameter, so a declaration of ‘length’
 must be available                                                                                                         
kgmString.h:152: error: there are no arguments to ‘length’ that depend on a template parameter, so a declaration of ‘length’
 must be available                                                                                                         
kgmString.h:157: error: there are no arguments to ‘length’ that depend on a template parameter, so a declaration of ‘length’
 must be available                                                                                                         
kgmString.h:161: error: there are no arguments to ‘length’ that depend on a template parameter, so a declaration of ‘length’
 must be available                                                                                                         
kgmString.h:167: error: ‘m_str’ was not declared in this scope
kgmString.h: In member function ‘bool kgmTString<T>::string(T, T, kgmTString<T>&)’:
kgmString.h:190: error: ‘m_str’ was not declared in this scope
kgmString.h: In member function ‘void kgmTString<T>::string(T*)’:
kgmString.h:197: error: ‘m_str’ was not declared in this scope
kgmString.h:197: error: ‘m_size’ was not declared in this scope
kgmString.h: In member function ‘int kgmTString<T>::find(T, int)’:
kgmString.h:203: error: ‘m_length’ was not declared in this scope
kgmString.h:205: error: ‘m_length’ was not declared in this scope
kgmString.h:206: error: ‘m_data’ was not declared in this scope
kgmSystem.cpp: In static member function ‘static bool kgmSystem::isDirectory(kgmString&)’:
kgmSystem.cpp:86: error: ‘class kgmTString<char>’ has no member named ‘data’
In file included from kgmSystem.h:3,
                 from kgmSystem.cpp:1:
kgmString.h: In member function ‘kgmTString<T>& kgmTString<T>::operator=(const T*) [with T = char]’:
kgmSystem.cpp:42:   instantiated from here
kgmString.h:30: error: ‘clear’ was not declared in this scope
kgmString.h:36: error: invalid conversion from ‘const char*’ to ‘char*’
kgmString.h:36: error:   initializing argument 1 of ‘void kgmTString<T>::alloc(T*, uint) [with T = char]’
kgmString.h: In member function ‘void kgmTString<T>::alloc(T*, uint) [with T = char]’:
kgmString.h:36:   instantiated from ‘kgmTString<T>& kgmTString<T>::operator=(const T*) [with T = char]’
kgmSystem.cpp:42:   instantiated from here
kgmString.h:97: error: ‘clear’ was not declared in this scope
In file included from kgmString.h:2,
                 from kgmApp.h:2,
                 from kgmWindow.cpp:4:
kgmArray.h:6: error: expected class-name before ‘{’ token
kgmArray.h: In constructor ‘kgmArray<T>::kgmArray()’:
kgmArray.h:9: error: class ‘kgmArray<T>’ does not have any field named ‘kgmMemory’
kgmArray.h: In constructor ‘kgmArray<T>::kgmArray(uint)’:
kgmArray.h:13: error: class ‘kgmArray<T>’ does not have any field named ‘kgmMemory’
kgmArray.h: In member function ‘void kgmArray<T>::operator=(const kgmArray<T>&)’:
kgmArray.h:24: error: there are no arguments to ‘clear’ that depend on a template parameter, so a declaration of ‘clear’ mus
t be available                                                                                                             
kgmArray.h:24: note: (if you use ‘-fpermissive’, G++ will accept your code, but allowing the use of an undeclared name is de
precated)                                                                                                                  
kgmArray.h:25: error: ‘o’ was not declared in this scope
kgmArray.h: In member function ‘void kgmArray<T>::realloc(uint)’:
kgmArray.h:31: error: ‘m_data’ was not declared in this scope
kgmArray.h:32: error: ‘m_length’ was not declared in this scope
kgmArray.h:34: error: ‘new_Count’ was not declared in this scope
kgmArray.h: In member function ‘void kgmArray<T>::add(const T&)’:
kgmArray.h:43: error: ‘m_length’ was not declared in this scope
kgmArray.h:44: error: ‘m_data’ was not declared in this scope
In file included from kgmApp.h:2,
                 from kgmWindow.cpp:4:
kgmString.h: At global scope:
kgmString.h:10: error: expected class-name before ‘{’ token
kgmString.h: In constructor ‘kgmTString<T>::kgmTString()’:
kgmString.h:13: error: class ‘kgmTString<T>’ does not have any field named ‘kgmArray’
kgmString.h: In destructor ‘virtual kgmTString<T>::~kgmTString()’:
kgmString.h:25: error: there are no arguments to ‘clear’ that depend on a template parameter, so a declaration of ‘clear’ mu
st be available                                                                                                            
kgmString.h: In member function ‘kgmTString<T>& kgmTString<T>::operator=(const T*)’:
kgmString.h:30: error: there are no arguments to ‘clear’ that depend on a template parameter, so a declaration of ‘clear’ mu
st be available                                                                                                            
kgmString.h: In member function ‘kgmTString<T>& kgmTString<T>::operator=(const kgmTString<T>&)’:
kgmString.h:40: error: there are no arguments to ‘clear’ that depend on a template parameter, so a declaration of ‘clear’ mu
st be available                                                                                                            
kgmString.h: In member function ‘kgmTString<T>& kgmTString<T>::operator+=(const kgmTString<T>&)’:
kgmString.h:48: error: ‘m_length’ was not declared in this scope
kgmString.h:52: error: ‘m_data’ was not declared in this scope
kgmString.h:54: error: there are no arguments to ‘clear’ that depend on a template parameter, so a declaration of ‘clear’ mu
st be available                                                                                                            
kgmString.h: In member function ‘T& kgmTString<T>::operator[](uint)’:
kgmString.h:68: error: ‘m_data’ was not declared in this scope
kgmString.h: In member function ‘bool kgmTString<T>::operator==(const kgmTString<T>&)’:
kgmString.h:72: error: ‘m_data’ was not declared in this scope
kgmString.h:72: error: ‘m_length’ was not declared in this scope
kgmString.h: In member function ‘bool kgmTString<T>::operator==(const T*)’:
kgmString.h:76: error: ‘m_data’ was not declared in this scope
kgmString.h:76: error: ‘m_length’ was not declared in this scope
kgmString.h: In member function ‘kgmTString<T>::operator T*() const’:
kgmString.h:81: error: ‘m_data’ was not declared in this scope
kgmString.h: In member function ‘kgmTString<T>::operator const T*() const’:
kgmString.h:85: error: ‘m_data’ was not declared in this scope
kgmString.h: In member function ‘void kgmTString<T>::alloc(uint)’:
kgmString.h:90: error: there are no arguments to ‘clear’ that depend on a template parameter, so a declaration of ‘clear’ mu
st be available                                                                                                            
kgmString.h:91: error: ‘m_length’ was not declared in this scope
kgmString.h:92: error: ‘m_data’ was not declared in this scope
kgmString.h: In member function ‘void kgmTString<T>::alloc(T*, uint)’:
kgmString.h:97: error: there are no arguments to ‘clear’ that depend on a template parameter, so a declaration of ‘clear’ mu
st be available                                                                                                            
kgmString.h:98: error: ‘m_length’ was not declared in this scope
kgmString.h:99: error: ‘m_data’ was not declared in this scope
kgmString.h: In member function ‘void kgmTString<T>::toUpper()’:
kgmString.h:105: error: ‘m_data’ was not declared in this scope
kgmString.h:110: error: ‘m_length’ was not declared in this scope
kgmString.h:111: error: ‘m_data’ was not declared in this scope
kgmString.h: In member function ‘void kgmTString<T>::toLower()’:
kgmString.h:116: error: ‘m_data’ was not declared in this scope
kgmString.h:121: error: ‘m_length’ was not declared in this scope
kgmString.h:122: error: ‘m_data’ was not declared in this scope
kgmString.h: In member function ‘int kgmTString<T>::exist(T&)’:
kgmString.h:127: error: ‘m_length’ was not declared in this scope
kgmString.h:128: error: ‘m_data’ was not declared in this scope
kgmString.h: In member function ‘T* kgmTString<T>::pointer(uint)’:
kgmString.h:134: error: ‘m_length’ was not declared in this scope
kgmString.h:136: error: ‘m_data’ was not declared in this scope
kgmString.h: In member function ‘kgmTString<T> kgmTString<T>::tokenize(kgmTString<T>&, unsigned int&)’:
kgmString.h:147: error: there are no arguments to ‘length’ that depend on a template parameter, so a declaration of ‘length’
 must be available                                                                                                         
kgmString.h:152: error: there are no arguments to ‘length’ that depend on a template parameter, so a declaration of ‘length’
 must be available                                                                                                         
kgmString.h:157: error: there are no arguments to ‘length’ that depend on a template parameter, so a declaration of ‘length’
 must be available                                                                                                         
kgmString.h:161: error: there are no arguments to ‘length’ that depend on a template parameter, so a declaration of ‘length’
 must be available                                                                                                         
kgmString.h:167: error: ‘m_str’ was not declared in this scope
kgmString.h: In member function ‘bool kgmTString<T>::string(T, T, kgmTString<T>&)’:
kgmString.h:190: error: ‘m_str’ was not declared in this scope
kgmString.h: In member function ‘void kgmTString<T>::string(T*)’:
kgmString.h:197: error: ‘m_str’ was not declared in this scope
kgmString.h:197: error: ‘m_size’ was not declared in this scope
kgmString.h: In member function ‘int kgmTString<T>::find(T, int)’:
kgmString.h:203: error: ‘m_length’ was not declared in this scope
kgmString.h:205: error: ‘m_length’ was not declared in this scope
kgmString.h:206: error: ‘m_data’ was not declared in this scope
In file included from kgmString.h:2,
                 from kgmXml.h:5,
                 from kgmXml.cpp:5:
kgmArray.h:6: error: expected class-name before ‘{’ token
kgmArray.h: In constructor ‘kgmArray<T>::kgmArray()’:
kgmArray.h:9: error: class ‘kgmArray<T>’ does not have any field named ‘kgmMemory’
kgmArray.h: In constructor ‘kgmArray<T>::kgmArray(uint)’:
kgmArray.h:13: error: class ‘kgmArray<T>’ does not have any field named ‘kgmMemory’
kgmArray.h: In member function ‘void kgmArray<T>::operator=(const kgmArray<T>&)’:
kgmArray.h:24: error: there are no arguments to ‘clear’ that depend on a template parameter, so a declaration of ‘clear’ mus
t be available                                                                                                             
kgmArray.h:24: note: (if you use ‘-fpermissive’, G++ will accept your code, but allowing the use of an undeclared name is de
precated)                                                                                                                  
kgmArray.h:25: error: ‘o’ was not declared in this scope
kgmArray.h: In member function ‘void kgmArray<T>::realloc(uint)’:
kgmArray.h:31: error: ‘m_data’ was not declared in this scope
kgmArray.h:32: error: ‘m_length’ was not declared in this scope
kgmArray.h:34: error: ‘new_Count’ was not declared in this scope
kgmArray.h: In member function ‘void kgmArray<T>::add(const T&)’:
kgmArray.h:43: error: ‘m_length’ was not declared in this scope
kgmArray.h:44: error: ‘m_data’ was not declared in this scope
In file included from kgmXml.h:5,
                 from kgmXml.cpp:5:
kgmString.h: At global scope:
kgmString.h:10: error: expected class-name before ‘{’ token
kgmString.h: In constructor ‘kgmTString<T>::kgmTString()’:
kgmString.h:13: error: class ‘kgmTString<T>’ does not have any field named ‘kgmArray’
kgmString.h: In destructor ‘virtual kgmTString<T>::~kgmTString()’:
kgmString.h:25: error: there are no arguments to ‘clear’ that depend on a template parameter, so a declaration of ‘clear’ mu
st be available                                                                                                            
kgmString.h: In member function ‘kgmTString<T>& kgmTString<T>::operator=(const T*)’:
kgmString.h:30: error: there are no arguments to ‘clear’ that depend on a template parameter, so a declaration of ‘clear’ mu
st be available                                                                                                            
kgmString.h: In member function ‘kgmTString<T>& kgmTString<T>::operator=(const kgmTString<T>&)’:
kgmString.h:40: error: there are no arguments to ‘clear’ that depend on a template parameter, so a declaration of ‘clear’ mu
st be available                                                                                                            
kgmString.h: In member function ‘kgmTString<T>& kgmTString<T>::operator+=(const kgmTString<T>&)’:
kgmString.h:48: error: ‘m_length’ was not declared in this scope
kgmString.h:52: error: ‘m_data’ was not declared in this scope
kgmString.h:54: error: there are no arguments to ‘clear’ that depend on a template parameter, so a declaration of ‘clear’ mu
st be available                                                                                                            
kgmString.h: In member function ‘T& kgmTString<T>::operator[](uint)’:
kgmString.h:68: error: ‘m_data’ was not declared in this scope
kgmString.h: In member function ‘bool kgmTString<T>::operator==(const kgmTString<T>&)’:
kgmString.h:72: error: ‘m_data’ was not declared in this scope
kgmString.h:72: error: ‘m_length’ was not declared in this scope
kgmString.h: In member function ‘bool kgmTString<T>::operator==(const T*)’:
kgmString.h:76: error: ‘m_data’ was not declared in this scope
kgmString.h:76: error: ‘m_length’ was not declared in this scope
kgmString.h: In member function ‘kgmTString<T>::operator T*() const’:
kgmString.h:81: error: ‘m_data’ was not declared in this scope
kgmString.h: In member function ‘kgmTString<T>::operator const T*() const’:
kgmString.h:85: error: ‘m_data’ was not declared in this scope
kgmString.h: In member function ‘void kgmTString<T>::alloc(uint)’:
kgmString.h:90: error: there are no arguments to ‘clear’ that depend on a template parameter, so a declaration of ‘clear’ mu
st be available                                                                                                            
kgmString.h:91: error: ‘m_length’ was not declared in this scope
kgmString.h:92: error: ‘m_data’ was not declared in this scope
kgmString.h: In member function ‘void kgmTString<T>::alloc(T*, uint)’:
kgmString.h:97: error: there are no arguments to ‘clear’ that depend on a template parameter, so a declaration of ‘clear’ mu
st be available                                                                                                            
kgmString.h:98: error: ‘m_length’ was not declared in this scope
kgmString.h:99: error: ‘m_data’ was not declared in this scope
kgmString.h: In member function ‘void kgmTString<T>::toUpper()’:
kgmString.h:105: error: ‘m_data’ was not declared in this scope
kgmString.h:110: error: ‘m_length’ was not declared in this scope
kgmString.h:111: error: ‘m_data’ was not declared in this scope
kgmString.h: In member function ‘void kgmTString<T>::toLower()’:
kgmString.h:116: error: ‘m_data’ was not declared in this scope
kgmString.h:121: error: ‘m_length’ was not declared in this scope
kgmString.h:122: error: ‘m_data’ was not declared in this scope
kgmString.h: In member function ‘int kgmTString<T>::exist(T&)’:
kgmString.h:127: error: ‘m_length’ was not declared in this scope
kgmString.h:128: error: ‘m_data’ was not declared in this scope
kgmString.h: In member function ‘T* kgmTString<T>::pointer(uint)’:
kgmString.h:134: error: ‘m_length’ was not declared in this scope
kgmString.h:136: error: ‘m_data’ was not declared in this scope
kgmString.h: In member function ‘kgmTString<T> kgmTString<T>::tokenize(kgmTString<T>&, unsigned int&)’:
kgmString.h:147: error: there are no arguments to ‘length’ that depend on a template parameter, so a declaration of ‘length’
 must be available                                                                                                         
kgmString.h:152: error: there are no arguments to ‘length’ that depend on a template parameter, so a declaration of ‘length’
 must be available                                                                                                         
kgmString.h:157: error: there are no arguments to ‘length’ that depend on a template parameter, so a declaration of ‘length’
 must be available                                                                                                         
kgmString.h:161: error: there are no arguments to ‘length’ that depend on a template parameter, so a declaration of ‘length’
 must be available                                                                                                         
kgmString.h:167: error: ‘m_str’ was not declared in this scope
kgmString.h: In member function ‘bool kgmTString<T>::string(T, T, kgmTString<T>&)’:
kgmString.h:190: error: ‘m_str’ was not declared in this scope
kgmString.h: In member function ‘void kgmTString<T>::string(T*)’:
kgmString.h:197: error: ‘m_str’ was not declared in this scope
kgmString.h:197: error: ‘m_size’ was not declared in this scope
kgmString.h: In member function ‘int kgmTString<T>::find(T, int)’:
kgmString.h:203: error: ‘m_length’ was not declared in this scope
kgmString.h:205: error: ‘m_length’ was not declared in this scope
kgmString.h:206: error: ‘m_data’ was not declared in this scope
kgmXml.cpp: In constructor ‘kgmXml::kgmXml(kgmString&)’:
kgmXml.cpp:99: error: ‘class kgmTString<char>’ has no member named ‘data’
kgmXml.cpp:99: error: ‘class kgmTString<char>’ has no member named ‘length’
kgmXml.cpp: In member function ‘kgmXml::Node* kgmXml::parse(void*, int)’:
kgmXml.cpp:128: warning: deprecated conversion from string constant to ‘char*’
kgmXml.cpp:134: warning: deprecated conversion from string constant to ‘char*’
kgmXml.cpp:136: warning: deprecated conversion from string constant to ‘char*’
kgmXml.cpp:150: warning: deprecated conversion from string constant to ‘char*’
kgmXml.cpp:152: warning: deprecated conversion from string constant to ‘char*’
kgmXml.cpp:158: warning: deprecated conversion from string constant to ‘char*’
kgmXml.cpp:167: warning: deprecated conversion from string constant to ‘char*’
kgmXml.cpp:172: warning: deprecated conversion from string constant to ‘char*’
kgmXml.cpp:174: warning: deprecated conversion from string constant to ‘char*’
kgmXml.cpp:175: warning: deprecated conversion from string constant to ‘char*’
In file included from kgmXml.h:5,
                 from kgmXml.cpp:5:
kgmString.h: In member function ‘void kgmTString<T>::alloc(T*, uint) [with T = char]’:
kgmXml.cpp:52:   instantiated from here
kgmString.h:97: error: ‘clear’ was not declared in this scope
kgmString.h: In destructor ‘kgmTString<T>::~kgmTString() [with T = char]’:
kgmXml.cpp:75:   instantiated from here
kgmString.h:25: error: ‘clear’ was not declared in this scope
kgmString.h: In member function ‘bool kgmTString<T>::operator==(const kgmTString<T>&) [with T = char]’:
kgmXml.cpp:77:   instantiated from here
kgmString.h:72: error: ‘const class kgmTString<char>’ has no member named ‘m_data’
kgmString.h: In member function ‘kgmTString<T>& kgmTString<T>::operator=(const kgmTString<T>&) [with T = char]’:
kgmXml.cpp:78:   instantiated from here
kgmString.h:40: error: ‘clear’ was not declared in this scope
kgmString.h:41: error: ‘const class kgmTString<char>’ has no member named ‘empty’
kgmString.h:43: error: ‘const class kgmTString<char>’ has no member named ‘m_data’
kgmString.h:43: error: ‘const class kgmTString<char>’ has no member named ‘m_length’
make: *** [all] Error 1
user@gccec-user:/media/PENDRIVE/Projects/kgmEngine/kgmMain$ 