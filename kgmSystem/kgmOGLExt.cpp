#include "kgmOGLExt.h"

#ifndef ANDROID
//DRAW ELEMENTS
PFNGLDRAWRANGEELEMENTSPROC		  glDrawRangeElements = 0;
//TEXTURE EXTENTIONS
PFNGLACTIVETEXTUREARBPROC       glActiveTexture = 0;
PFNGLCLIENTACTIVETEXTUREARBPROC glClientActiveTexture = 0;

//VERTEX BUFFER EXTENTIONS
PFNGLGENBUFFERSARBPROC			glGenBuffers = 0;
PFNGLDELETEBUFFERSARBPROC		glDeleteBuffers = 0;
PFNGLBINDBUFFERARBPROC			glBindBuffer = 0;
PFNGLBUFFERDATAARBPROC			glBufferData = 0;
PFNGLBUFFERSUBDATAARBPROC		glBufferSubData = 0;
PFNGLGETBUFFERSUBDATAARBPROC	glGetBufferSubData = 0;
PFNGLMAPBUFFERARBPROC			glMapBuffer = 0;
PFNGLUNMAPBUFFERARBPROC			glUnmapBuffer = 0;

//FRAME BUFFER EXTENTIONS
PFNGLGENFRAMEBUFFERSEXTPROC			glGenFramebuffers = 0;
PFNGLDELETEFRAMEBUFFERSEXTPROC		glDeleteFramebuffers = 0;
PFNGLBINDFRAMEBUFFEREXTPROC			glBindFramebuffer = 0;
PFNGLFRAMEBUFFERTEXTURE2DEXTPROC	glFramebufferTexture2D = 0;
PFNGLCHECKFRAMEBUFFERSTATUSEXTPROC	glCheckFramebufferStatus = 0;

//GLSL SHADER EXTENTIONS
PFNGLCREATESHADEROBJECTARBPROC   glCreateShaderObject = 0;
PFNGLCREATEPROGRAMOBJECTARBPROC  glCreateProgramObject = 0;
PFNGLDELETEOBJECTARBPROC         glDeleteObject = 0;
PFNGLSHADERSOURCEARBPROC         glShaderSource = 0;
PFNGLCOMPILESHADERARBPROC        glCompileShader = 0;
PFNGLATTACHOBJECTARBPROC         glAttachObject = 0;
PFNGLDETACHOBJECTARBPROC         glDetachObject = 0;
PFNGLLINKPROGRAMARBPROC          glLinkProgram = 0;
PFNGLVALIDATEPROGRAMARBPROC      glValidateProgram = 0;
PFNGLUSEPROGRAMOBJECTARBPROC     glUseProgramObject = 0;
PFNGLGETOBJECTPARAMETERFVARBPROC glGetObjectParameterfv = 0;
PFNGLGETOBJECTPARAMETERIVARBPROC glGetObjectParameteriv = 0;
PFNGLGETINFOLOGARBPROC           glGetInfoLog = 0;
PFNGLGETUNIFORMLOCATIONARBPROC   glGetUniformLocation = 0;
PFNGLUNIFORM1IARBPROC            glUniform1i = 0;
PFNGLUNIFORM1IVARBPROC           glUniform1iv = 0;
PFNGLUNIFORM2IVARBPROC           glUniform2iv = 0;
PFNGLUNIFORM3IVARBPROC           glUniform3iv = 0;
PFNGLUNIFORM4IVARBPROC           glUniform4iv = 0;
PFNGLUNIFORM1FVARBPROC           glUniform1fv = 0;
PFNGLUNIFORM2FVARBPROC           glUniform2fv = 0;
PFNGLUNIFORM3FVARBPROC           glUniform3fv = 0;
PFNGLUNIFORM4FVARBPROC           glUniform4fv = 0;
PFNGLUNIFORMMATRIX2FVARBPROC     glUniformMatrix2fv = 0;
PFNGLUNIFORMMATRIX3FVARBPROC     glUniformMatrix3fv = 0;
PFNGLUNIFORMMATRIX4FVARBPROC     glUniformMatrix4fv = 0;

#endif

#ifdef WIN32
 PFNWGLSWAPINTERVALFARPROC wglSwapIntervalEXT = 0;
#endif
#ifdef LINUX
 PFNGLXSWAPINTERVALSGIPROC glxSwapIntervalSGI = 0;
#endif


bool glInitExt(){
#ifndef ANDROID
 GLEXT_FN(glDrawRangeElements,		PFNGLDRAWRANGEELEMENTSPROC);
 GLEXT_FN(glActiveTexture,       PFNGLACTIVETEXTUREARBPROC);
 GLEXT_FN(glClientActiveTexture, PFNGLCLIENTACTIVETEXTUREARBPROC);

 GLEXT_FN(glGenBuffers, PFNGLGENBUFFERSARBPROC);
 GLEXT_FN(glDeleteBuffers, PFNGLDELETEBUFFERSARBPROC);
 GLEXT_FN(glBindBuffer, PFNGLBINDBUFFERARBPROC);
 GLEXT_FN(glBufferData, PFNGLBUFFERDATAARBPROC);
 GLEXT_FN(glBufferSubData, PFNGLBUFFERSUBDATAARBPROC);
 GLEXT_FN(glGetBufferSubData, PFNGLGETBUFFERSUBDATAARBPROC);
 GLEXT_FN(glMapBuffer, PFNGLMAPBUFFERARBPROC);
 GLEXT_FN(glUnmapBuffer, PFNGLUNMAPBUFFERARBPROC);

 GLEXT_FN(glGenFramebuffers, PFNGLGENFRAMEBUFFERSEXTPROC);
 GLEXT_FN(glDeleteFramebuffers, PFNGLDELETEFRAMEBUFFERSEXTPROC);
 GLEXT_FN(glBindFramebuffer, PFNGLBINDFRAMEBUFFEREXTPROC);
 GLEXT_FN(glFramebufferTexture2D, PFNGLFRAMEBUFFERTEXTURE2DEXTPROC);
 GLEXT_FN(glCheckFramebufferStatus, PFNGLCHECKFRAMEBUFFERSTATUSEXTPROC);

 GLEXT_FN(glCreateProgramObject, PFNGLCREATEPROGRAMOBJECTARBPROC);
 GLEXT_FN(glCreateShaderObject,  PFNGLCREATESHADEROBJECTARBPROC);
 GLEXT_FN(glDeleteObject,        PFNGLDELETEOBJECTARBPROC);
 GLEXT_FN(glShaderSource,        PFNGLSHADERSOURCEARBPROC);
 GLEXT_FN(glCompileShader,       PFNGLCOMPILESHADERARBPROC);
 GLEXT_FN(glAttachObject,        PFNGLATTACHOBJECTARBPROC);
 GLEXT_FN(glDetachObject,        PFNGLDETACHOBJECTARBPROC);
 GLEXT_FN(glLinkProgram,         PFNGLLINKPROGRAMARBPROC);
 GLEXT_FN(glValidateProgram,     PFNGLVALIDATEPROGRAMARBPROC);
 GLEXT_FN(glUseProgramObject,    PFNGLUSEPROGRAMOBJECTARBPROC);
 GLEXT_FN(glGetObjectParameterfv,PFNGLGETOBJECTPARAMETERFVARBPROC);
 GLEXT_FN(glGetObjectParameteriv,PFNGLGETOBJECTPARAMETERIVARBPROC);
 GLEXT_FN(glGetInfoLog,			PFNGLGETINFOLOGARBPROC);
 GLEXT_FN(glGetUniformLocation,	PFNGLGETUNIFORMLOCATIONARBPROC);
 GLEXT_FN(glUniform1i,			PFNGLUNIFORM1IARBPROC);
 GLEXT_FN(glUniform1iv,			PFNGLUNIFORM1IVARBPROC);
 GLEXT_FN(glUniform2iv,			PFNGLUNIFORM2IVARBPROC);
 GLEXT_FN(glUniform3iv,			PFNGLUNIFORM3IVARBPROC);
 GLEXT_FN(glUniform4iv,			PFNGLUNIFORM4IVARBPROC);
 GLEXT_FN(glUniform1fv,			PFNGLUNIFORM1FVARBPROC);
 GLEXT_FN(glUniform2fv,			PFNGLUNIFORM2FVARBPROC);
 GLEXT_FN(glUniform3fv,			PFNGLUNIFORM3FVARBPROC);
 GLEXT_FN(glUniform4fv,			PFNGLUNIFORM4FVARBPROC);
 GLEXT_FN(glUniformMatrix2fv,	PFNGLUNIFORMMATRIX2FVARBPROC);
 GLEXT_FN(glUniformMatrix3fv,	PFNGLUNIFORMMATRIX3FVARBPROC);
 GLEXT_FN(glUniformMatrix4fv,	PFNGLUNIFORMMATRIX4FVARBPROC);
 GLEXT_FN(glUniform4iv,			PFNGLUNIFORM4IVARBPROC);
#endif
#ifdef WIN32
 GLEXT_FN(wglSwapIntervalEXT,	PFNWGLSWAPINTERVALFARPROC);
#endif
#ifdef LINUX
 GLEXT_FN(glxSwapIntervalSGI,    PFNGLXSWAPINTERVALSGIPROC);
#endif

 return true;
}
